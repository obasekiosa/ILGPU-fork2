name: CI

on:
  push:
  pull_request:

env:
  DOTNET_NOLOGO: true

jobs:

  # Check that building the entire solution for all target frameworks works.
  build:
    # Do not run this job for pull requests where both branches are from the same repo.
    # Jobs that depend on this one will be skipped too.
    # This prevents duplicate CI runs for our own pull requests, whilst preserving the ability to
    # run the CI for each branch push to a fork, and for each pull request originating from a fork.
    if: github.event_name == 'schedule' || github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    runs-on: windows-latest
    strategy:
      matrix:
        path: [Src, Samples]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup the latest .NET 5 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Build
        run: dotnet build --configuration=Release -p:TreatWarningsAsErrors=true ${{ matrix.path }}

  # Run tests for all supported combinations of OS/library/framework.
  test-library:
    strategy:
      matrix:
        os: cuda
        library: [ILGPU.Algorithms]
        framework: [netcoreapp3.1, net5.0]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup the latest .NET 5 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Setup the latest .NET Core 3.1 SDK
        if: matrix.framework == 'netcoreapp3.1'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Set test flavor
        id: test-flavor
        shell: bash
        run: echo ::set-output name=flavor::$([[ "${{ matrix.os }}" == "cuda" ]] && echo "Cuda" || echo "CPU")

      - name: Build and test
        run: dotnet test --configuration=Release --framework=${{ matrix.framework }} -p:TreatWarningsAsErrors=true --logger GitHubActions Src/${{ matrix.library }}.Tests.${{ steps.test-flavor.outputs.flavor }}
        env:
          ILGPU_CLEAN_TESTS: ${{ github.event_name == 'schedule' || (github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))) }}